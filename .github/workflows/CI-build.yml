name: CI-build

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"

  workflow_dispatch:

env:
  GITHUB_ACTIONS: true

jobs:
  CI:
    strategy:
      matrix:
        python-version: ["3.9"]
        os-version: ["macos-latest", "windows-latest", "ubuntu-20.04"]

    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          version: 2.11.1
          prerelease: false
          enable-pep582: false
          allow-python-prereleases: false
          update-python: true

      - name: vulkan dll
        if: matrix.os-version == 'windows-latest'
        run: echo F | xcopy .\assets\vulkan-1.dll C:\Windows\System32

      - name: Build
        run: |
          pdm install
          pdm run pyinstaller

      - name: zip-windows
        if: matrix.os-version == 'windows-latest'
        run: |
          cd dist\Final2x-core
          7z a -r Final2x-core-${{ matrix.os-version }}.zip *

      - name: zip-unix
        if: matrix.os-version != 'windows-latest'
        run: |
          cd dist/Final2x-core
          zip -9 -r Final2x-core-${{ matrix.os-version }}.zip ./*

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: Final2x-core-${{ matrix.os-version }}
          path: dist/Final2x-core/Final2x-core-${{ matrix.os-version }}.zip

      - name: Test-windows
        if: matrix.os-version == 'windows-latest'
        run: |
          cd dist\Final2x-core
          .\Final2x-core

      - name: Test-unix
        if: matrix.os-version != 'windows-latest'
        run: |
          ./Final2x-core
